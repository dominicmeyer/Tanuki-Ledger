name: 'Setup Project Dependencies & run initial Commands'
description: 'Installs all necessary dependencies for this projects workflows to use and initialy runs relevant commands'

env:
  GO_VERSION="1.23.6"
  TEMPL_VERSION="v0.3.833"
  AIR_VERSION="v1.61.7"
  GOCYCLO_VERSION="v0.6.0"
  GOIMPORTS_VERSION="v0.30.0"

runs:
  using: "composite"
  steps:
    - name: Cache Primes
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          ~/go
          ~/.cache
        key: ${{ runner.os }}-project-setup-$GO_VERSION-$TEMPL_VERSION-$AIR_VERSION-$GOCYCLO_VERSION-$GOIMPORTS_VERSION

    - name: setup go environment
      uses: actions/setup-go@v5.4.0
      with:
        go-version: $GO_VERSION

    - name: setup system dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y --allow-downgrades \
          nodejs=18.19.1* \
          npm=9.2.0* \
          libgtk2.0-0t64=2.24.33* \
          libgtk-3-0t64=3.24.41* \
          libgbm-dev=24.0.5* \
          libgbm1=24.0.5* \
          libnotify-dev=0.8.3* \
          libnss3=2:3.98* \
          libxss1=1:1.2.3* \
          libasound2t64=1.2.11* \
          libxtst6=2:1.2.3* \
          xauth=1:1.1.2* \
          xvfb=2:21.1.12*

    - name: install npm packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: install templ
      if: steps.cache.outputs.cache-hit != 'true'
      run: go install github.com/a-h/templ/cmd/templ@$TEMPL_VERSION

    - name: install air
      if: steps.cache.outputs.cache-hit != 'true'
      run: go install github.com/air-verse/air@$AIR_VERSION

    - name: install gocyclo
      if: steps.cache.outputs.cache-hit != 'true'
      run: go install github.com/fzipp/gocyclo/cmd/gocyclo@$GOCYCLO_VERSION

    - name: install goimports
      if: steps.cache.outputs.cache-hit != 'true'
      run: go install golang.org/x/tools/cmd/goimports@$GOIMPORTS_VERSION

    - name: generate code
      run: go generate